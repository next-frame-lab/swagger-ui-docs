openapi: 3.1.0
info:
  title: 공연장 좌석 예매 서비스 API
  description: 공연장 좌석 예매 서비스 API 문서
  version: 1.0.0
servers:
  - url: http://localhost:8081/api/v1
    description: Local Dev Server
  - url: https://api.nextframe.com/api/v1
    description: Production Server
tags:
  - name: performance
    description: 공연 관련 API
  - name: review
    description: 공연 리뷰 관련 API
  - name: reservation
    description: 예매 관련 API
  - name: auth
    description: 인증 관련 API
  - name: user
    description: 사용자 관련 API
  - name: payment
    description: 결제 관련 API
  - name: refund
    description: 환불 관련 API
paths:
  /performances/search:
    get:
      tags:
        - performance
      summary: 공연 검색 및 필터링
      description: 공연 이름, 공연 날짜 등을 기준으로 공연 정보를 검색하거나 필터링합니다.
      operationId: searchPerformances
      parameters:
        - name: name
          in: query
          required: false
          description: 공연 이름 (전체 또는 일부 문자열)
          schema:
            type: string
        - name: date
          in: query
          required: false
          description: 공연 날짜 (YYYY-MM-DD)
          schema:
            type: string
            format: date
        - name: stadium
          in: query
          required: false
          description: 공연장 이름
          schema:
            type: string
        - name: genre
          in: query
          required: false
          description: 공연 장르 (연극, 뮤지컬 등)
          schema:
            type: string
        - name: type
          in: query
          required: false
          description: 공연 유형 (로맨스, 스릴러 등)
          schema:
            type: string
        - name: page
          in: query
          required: false
          description: 페이지 번호
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          required: false
          description: 한 페이지의 크기
          schema:
            type: integer
            default: 32
      responses:
        '200':
          description: 조건에 맞는 공연 검색 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
              example:
                code: SUCCESS
                data:
                  - id: "123e4567-e89b-12d3-a456-426614174000"
                    name: "레미제라블"
                    image: "https://example.com/poster.jpg"
                    type: "스릴러"
                    genre: "연극"
                    stadiumName: "예술의전당"
                    startDate: "2025-07-15"
                    endDate: "2025-08-15"
                    averageStar: 4.8
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /performances:
    get:
      tags:
        - performance
      summary: 공연 목록 조회
      description: 공연 목록을 조회합니다.
      operationId: getPerformances
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            minimum: 0
          required: true
          description: 페이지 번호
        - in: query
          name: size
          schema:
            type: integer
            enum:
              - 32
          required: true
          description: 한 페이지의 크기
      responses:
        '200':
          description: 공연 목록 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerformanceListResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /performances/{id}:
    get:
      tags:
        - performance
      summary: 공연 상세 조회
      description: 공연 ID를 통해 공연의 상세 정보를 조회합니다.
      operationId: getPerformanceById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: 조회할 공연 ID
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: 공연 상세 정보 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerformanceDetailResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /performances/{id}/stars:
    post:
      tags:
        - performance
      summary: 공연 별점 등록
      description: 공연의 별점을 등록합니다.
      operationId: submitPerformanceStar
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: 별점이 등록될 공연의 ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StarRequest'
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: 별점 등록 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StarResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /performances/{id}/reviews:
    get:
      tags:
        - review
      summary: 공연 리뷰 목록 조회
      description: 공연의 리뷰 목록을 조회합니다.
      operationId: getPerformanceReviews
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: 조회할 리뷰의 공연 ID
        - in: query
          name: page
          schema:
            type: integer
            minimum: 0
            example: 0
          required: true
        - in: query
          name: size
          schema:
            type: integer
            example: 5
          required: true
        - in: query
          name: sort
          schema:
            type: string
            example: createdAt,desc
          required: false
          description: 정렬 기준 (기본값 createdAt,desc)
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: 리뷰 목록 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewListResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - review
      summary: 공연 리뷰 등록
      description: 공연에 리뷰를 등록합니다.
      operationId: createPerformanceReview
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: 리뷰가 등록될 공연의 ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewRequest'
      security:
        - bearerAuth: [ ]
      responses:
        '201':
          description: 리뷰 등록 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /reviews/{id}:
    patch:
      tags:
        - review
      summary: 공연 리뷰 수정
      description: 공연 리뷰를 수정합니다.
      operationId: updatePerformanceReview
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: 조회할 리뷰 아이디
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewRequest'
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: 리뷰 수정 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - review
      summary: 공연 리뷰 삭제
      description: 공연의 리뷰를 삭제합니다.
      operationId: deletePerformanceReview
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: 삭제할 리뷰 ID
      security:
        - bearerAuth: [ ]
      responses:
        '204':
          description: 리뷰 삭제 성공 (내용 없음)
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /reviews/{id}/likes:
    post:
      tags:
        - review
      summary: 리뷰 좋아요 등록
      description: 리뷰 ID에 대해 좋아요를 등록합니다.
      operationId: likeReview
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: 좋아요가 등록될 리뷰의 ID
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: 리뷰에 좋아요 등록 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewLikeResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /performances/{performanceId}/schedules/{scheduleId}/seats:
    get:
      tags:
        - reservation
      summary: 예약 가능한 공연 좌석 조회
      description: 공연 ID와 공연 스케줄 ID를 통해 공연장의 예약 가능한 좌석 목록을 조회합니다.
      operationId: getAvailableSeats
      parameters:
        - $ref: '#/components/parameters/PerformanceId'
        - $ref: '#/components/parameters/ScheduleId'
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: 예약 가능한 좌석 목록 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservableSeatListResponse'
              examples:
                success:
                  value:
                    code: SUCCESS
                    data:
                      seatList:
                        - seatId: 1a2b3c4d-5e6f-7890-abcd-1234567890ef
                          section: A
                          row: 1
                          column: 1
                        - seatId: 2b3c4d5e-6f78-9012-bcde-2345678901fa
                          section: A
                          row: 1
                          column: 2
                        - seatId: 3c4d5e6f-7890-1234-cdef-3456789012ab
                          section: B
                          row: 2
                          column: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /reservations:
    post:
      tags:
        - reservation
      summary: 공연 좌석 예매
      description: 공연의 특정 스케줄에 대해 좌석을 예매합니다.
      operationId: reserveSeats
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationRequest'
      responses:
        '200':
          description: 예매 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /users/{id}/reservations:
    get:
      tags:
        - reservation
      summary: 사용자 예약 목록 조회
      description: 사용자 ID를 기반으로 해당 사용자의 예약 목록을 조회합니다.
      operationId: getUserReservations
      parameters:
        - name: id
          in: path
          required: true
          description: 사용자 식별자 (UUID)
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: 예약 목록 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
              example:
                code: SUCCESS
                data:
                  - reservationId: "acbd1234-5678-9abc-def0-112233445566"
                    performanceName: "햄릿"
                    performanceDate: "2025-07-15"
                    performanceTime: "19:30"
                    seat:
                      section: "A"
                      row: 1
                      number: 12
                  - reservationId: "98ab76cd-1234-4ef5-bc67-abcdef123456"
                    performanceName: "오페라의 유령"
                    performanceDate: "2025-07-15"
                    performanceTime: "19:30"
                    seat:
                      section: B
                      row: 2
                      number: 15
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /reservations/{id}/payment-info:
    get:
      tags:
        - payment
      summary: 결제 전 예약 정보 조회
      description: 예약 ID를 통해 공연 이름, 일시, 좌석, 결제 금액 및 방식을 조회합니다.
      operationId: getPaymentInfo
      parameters:
        - name: id
          in: path
          required: true
          description: 예약 ID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: 결제 정보 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: SUCCESS
                  data:
                    type: object
                    properties:
                      performanceName:
                        type: string
                        description: 공연 이름
                        example: "The Sound of Music"
                      performanceDate:
                        type: string
                        format: date
                        description: 공연 일자
                        example: "2025-09-20"
                      performanceTime:
                        type: string
                        format: time
                        description: 공연 시간
                        example: "19:30"
                      seat:
                          type: object
                          description: 좌석 정보
                          properties:
                            section:
                              type: string
                              example: B
                            row:
                              type: integer
                              example: 2
                            number:
                              type: integer
                              example: 15
                      totalAmount:
                        type: integer
                        format: int32
                        description: 결제 총액 (원화 기준)
                        example: 130000
                      paymentMethod:
                        type: string
                        description: 결제 방식
                        enum:
                          - naver
                          - kakao
                          - toss
                        example: naver
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /reservations/{id}/payment:
    post:
      tags:
        - payment
      summary: 예약에 대한 결제 요청
      description: 예약 ID에 해당하는 공연을 결제합니다.
      operationId: requestPayment
      parameters:
        - name: id
          in: path
          required: true
          description: 예약 ID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                paymentMethod:
                  type: string
                  enum: [ naver, kakao, toss ]
                  description: 결제 방식
              required:
                - paymentMethod
      responses:
        '200':
          description: 결제 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
              example:
                code: SUCCESS
                data:
                  paymentId: "fc670d11-4aa1-4ab5-b39f-b9b9443a96d9"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /payments/{id}/result:
    get:
      tags:
        - payment
      summary: 결제 완료 정보 조회
      description: 결제가 완료된 후, 사용자에게 보여줄 결제 결과 정보를 제공합니다.
      operationId: getPaymentResult
      parameters:
        - name: id
          in: path
          required: true
          description: 결제 ID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: 결제 결과 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
              example:
                code: SUCCESS
                data:
                  performanceName: "The Phantom of the Opera"
                  date: "2025-08-15"
                  time: "19:30"
                  totalAmount: 120000
                  seat:
                    section: B
                    row: 2
                    number: 15
                    description: 좌석
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /auth/signin:
    post:
      tags:
        - auth
      summary: 소셜 로그인 (카카오/네이버/구글 통합)
      description: 소셜 access token과 provider를 전달받아 로그인 또는 자동 회원가입을 처리하고 자체 JWT 토큰을 발급합니다.
      operationId: loginWithSocial
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                provider:
                  type: string
                  enum:
                    - kakao
                    - naver
                    - google
                  description: 로그인 제공자 종류
                accessToken:
                  type: string
                  description: 소셜에서 발급받은 access token
              required:
                - provider
                - accessToken
      responses:
        '200':
          description: 로그인 또는 회원가입 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: SUCCESS
                    description: 응답 코드 (성공/실패 등 처리용)
                  data:
                    type: object
                    properties:
                      accessToken:
                        type: string
                        description: 자체 발급 access token (JWT)
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
                      refreshToken:
                        type: string
                        description: 자체 발급 refresh token (JWT)
                        example: dGhpc2lzYXJlZnJlc2h0b2tlbg==
                      isNewUser:
                        type: boolean
                        description: true면 이번에 가입된 사용자
                        example: true
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /auth/refresh:
    post:
      tags:
        - auth
      summary: access token 재발급
      description: refresh token을 기반으로 새로운 access token을 발급합니다.
      operationId: refreshAccessToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
                  description: 발급받았던 refresh token
              required:
                - refreshToken
      responses:
        '200':
          description: access token 재발급 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: SUCCESS
                  message:
                    type: string
                    example: access token이 재발급되었습니다.
                  data:
                    type: object
                    properties:
                      accessToken:
                        type: string
                        example: new.jwt.access.token
                      refreshToken:
                        type: string
                        example: same.or.new.refresh.token
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /users/profile:
    get:
      tags:
        - user
      summary: 마이페이지 프로필 정보 조회
      description: 인증된 사용자의 프로필 정보를 조회합니다.
      operationId: getMyProfile
      responses:
        '200':
          description: 프로필 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
              example:
                code: SUCCESS
                data:
                  image: "https://cdn.example.com/profile/user123.jpg"
                  name: "홍길동"
                  age: 29
                  email: "hong@example.com"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /users/{id}/image:
    get:
      tags:
        - user
      summary: 사용자 프로필 이미지 조회
      description: 사용자 ID(UUID)를 기반으로 프로필 이미지 URL을 조회합니다.
      operationId: getUserProfileImage
      parameters:
        - name: id
          in: path
          required: true
          description: 사용자 고유 식별자
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: 프로필 이미지 URL 반환 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: SUCCESS
                  data:
                    type: object
                    properties:
                      image:
                        type: string
                        format: uri
                        description: 사용자 프로필 이미지 URL
                        example: https://cdn.example.com/profile/uuid.png
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /payments/{id}/refund:
    post:
      tags:
        - refund
      summary: 결제 환불 요청
      description: 결제 ID를 기반으로 환불 요청을 보냅니다.
      operationId: requestRefund
      parameters:
        - name: id
          in: path
          required: true
          description: 환불할 결제 ID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: 환불 요청 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
              example:
                code: REFUND_REQUESTED
                data:
                  refundId: "a1b2c3d4-e5f6-7890-aaaa-bbbbccccdddd"
                  status: "REQUESTED"
                  requestedAt: "2025-07-09T18:22:00"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /payments/{id}/refund-status:
    get:
      tags:
        - refund
      summary: 환불 상태 조회
      description: 결제 ID를 기반으로 환불 상태를 조회합니다.
      operationId: getRefundStatus
      parameters:
        - name: id
          in: path
          required: true
          description: 결제 ID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: 환불 상태 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
              example:
                code: SUCCESS
                data:
                  refundId: "a1b2c3d4-e5f6-7890-aaaa-bbbbccccdddd"
                  status: "APPROVED"
                  requestedAt: "2025-07-09T18:22:00"
                  completedAt: "2025-07-09T18:26:40"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  schemas:
    PerformanceListResponse:
      type: object
      properties:
        code:
          type: string
          example: SUCCESS
        data:
          type: object
          properties:
            performanceList:
              type: array
              items:
                $ref: '#/components/schemas/PerformanceSummary'
            pagination:
              $ref: '#/components/schemas/Pagination'
    PerformanceDetailResponse:
      type: object
      properties:
        code:
          type: string
          example: SUCCESS
        data:
          $ref: '#/components/schemas/PerformanceDetail'
    ReviewLikeResponse:
      type: object
      properties:
        code:
          type: string
          example: SUCCESS
        data:
          type: object
          properties:
            likeCount:
              type: integer
              example: 13
    StarRequest:
      type: object
      required:
        - rating
      properties:
        rating:
          type: number
          format: float
          minimum: 0
          maximum: 5
          example: 4.5
          description: 등록할 별점 (0.0 이상 5.0 이하, 소수점 1자리 허용)
    StarResponse:
      type: object
      properties:
        code:
          type: string
          example: SUCCESS
        data:
          type: object
          properties:
            averageStar:
              type: number
              format: float
              example: 4.6
    ReviewListResponse:
      type: object
      properties:
        code:
          type: string
          example: SUCCESS
        data:
          type: object
          properties:
            reviewList:
              type: array
              items:
                $ref: '#/components/schemas/Review'
            pagination:
              $ref: '#/components/schemas/Pagination'
    ReviewRequest:
      type: object
      required:
        - content
      properties:
        content:
          type: string
          example: 무대 연출이 압도적이었고 배우들의 몰입도가 정말 훌륭했어요!
          description: 리뷰 본문
    ReviewResponse:
      type: object
      properties:
        code:
          type: string
          example: SUCCESS
        data:
          type: object
          properties:
            id:
              type: string
              format: uuid
              example: b8c9d3fa-2f1a-4a5d-9e2a-812f7a91cdef
            createdAt:
              type: string
              format: date-time
              example: 2025-07-11 12:45:00
    ReservableSeatListResponse:
      type: object
      properties:
        code:
          type: string
          example: SUCCESS
        data:
          type: object
          properties:
            seatList:
              type: array
              items:
                $ref: '#/components/schemas/Seat'
    ReservationRequest:
      type: object
      required:
        - performanceId
        - scheduleId
        - seatIds
        - elapsedTime
      properties:
        performanceId:
          type: string
          format: uuid
        scheduleId:
          type: string
          format: uuid
        seatIds:
          type: array
          items:
            type: string
            format: uuid
        elapsedTime:
          type: integer
          description: 예약에 소요된 시간(초)
          example: 140
    ReservationResponse:
      type: object
      properties:
        code:
          type: string
          example: SUCCESS
        data:
          type: object
          properties:
            reservationId:
              type: string
              format: uuid
              example: 9f5b3c12-cc89-4b21-8e9e-1f3f68c3fa23
            totalPrice:
              type: integer
              example: 300000
    CommonResponse:
      type: object
      properties:
        code:
          type: string
          description: 응답 코드
        data:
          nullable: true
          description: 응답 데이터 (에러 시 null)
    Seat:
      type: object
      properties:
        seatId:
          type: string
          format: uuid
        section:
          type: string
          example: A
        row:
          type: integer
          example: 1
        column:
          type: integer
          example: 1
    PerformanceSummary:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: 공연 ID
        image:
          type: string
          format: uri
          description: 공연 대표 이미지
        name:
          type: string
          example: 캣츠
          description: 공연 이름
        type:
          type: string
          example: 로멘스
          description: 공연 유형 (예 로맨스, 스릴러)
        genre:
          type: string
          example: 콘서트
          description: 공연 유형 (예 연극, 뮤지컬)
        stadiumName:
          type: string
          example: 대전월드컵경기장
          description: 공연장 이름
        startDate:
          type: string
          format: date
          example: 2025-10-05
          description: 공연 시작 날짜
        endDate:
          type: string
          format: date
          example: 2025-10-25
          description: 공연 종료 날짜
        averageStar:
          type: number
          format: float
          description: 평균 별점(0.0 ~ 5.0)
          example: 4.8
        adultOnly:
          type: boolean
          description: 성인 공연 여부
          example: false
    PerformanceDetail:
      type: object
      properties:
        id:
          type: string
          format: uuid
        image:
          type: string
          format: uri
        name:
          type: string
          example: 오페라 유령
        type:
          type: string
          example: 로맨스
        genre:
          type: string
          example: 오페라
        averageStar:
          type: number
          format: float
          example: 4.6
        runningTime:
          type: integer
          description: 공연 진행 시간(분 단위)
          example: 130
        description:
          type: string
          description: 공연에 대한 설명
          example: 전설적인 오페라의 유령이 다시 돌아옵니다. 아름다운 무대와 감동적인 음악을 함께 즐겨보세요.
        adultOnly:
          type: boolean
        stadium:
          $ref: '#/components/schemas/Stadium'
        schedules:
          type: array
          description: 공연 스케줄 목록
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                example: 1a2b3c4d-5e6f-7890-abcd-1234567890ef
              date:
                type: string
                format: date-time
                example: '2025-09-10T19:00:00'
        seatPrices:
          type: array
          description: 좌석 정보
          items:
            $ref: '#/components/schemas/SeatPrice'
    Stadium:
      type: object
      properties:
        name:
          type: string
          example: 부산문화회관
        address:
          type: string
          example: 부산광역시 남구 유엔로 123
    SeatPrice:
      type: object
      properties:
        grade:
          type: string
          example: A
        price:
          type: integer
          example: 120000
    Review:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: c8d1e2a7-4a5b-437b-9d90-7b1a2c3f1234
        writerName:
          type: string
          example: 뮤덕이
        writerProfileImage:
          type: string
          format: uri
          example: https://cdn.example.com/profiles/user123.jpg
        content:
          type: string
          example: 정말 감동적인 공연이었어요. 무대 연출도 최고!
        likeCount:
          type: integer
          example: 12
        createdAt:
          type: string
          format: date-time
          example: 2025-07-01 14:32:00
    Pagination:
      type: object
      properties:
        page:
          type: integer
          example: 0
        size:
          type: integer
          example: 32
        totalItems:
          type: integer
          example: 88
        totalPages:
          type: integer
          example: 3
        hasNext:
          type: boolean
        hasPrevious:
          type: boolean
    ErrorResponse:
      type: object
      properties:
        code:
          type: string
          example: INVALID_REQUEST
        data:
          nullable: true
  responses:
    BadRequest:
      description: 잘못된 요청 (400)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            code: INVALID_REQUEST
            data: null
    NotFound:
      description: 리소스를 찾을 수 없음 (404)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            code: NOT_FOUND
            data: null
    Unauthorized:
      description: 인증 실패 (401)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            code: UNAUTHORIZED
            data: null
    InternalServerError:
      description: 서버 내부 오류 (500)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            code: INTERNAL_ERROR
            data: null
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  parameters:
    PerformanceId:
      in: path
      name: performanceId
      required: true
      schema:
        type: string
        format: uuid
      description: 공연 ID
    ScheduleId:
      in: path
      name: scheduleId
      required: true
      schema:
        type: string
        format: uuid
      description: 공연 스케줄 ID
    ReviewId:
      in: path
      name: reviewId
      required: true
      schema:
        type: string
        format: uuid
      description: 리뷰 ID
    Page:
      in: query
      name: page
      required: true
      schema:
        type: integer
        minimum: 0
      description: 페이지 번호
    Size:
      in: query
      name: size
      required: true
      schema:
        type: integer
        example: 5
      description: 페이지 크기
    Sort:
      in: query
      name: sort
      required: false
      schema:
        type: string
        example: createdAt,desc
      description: 정렬 기준
  requestBodies:
    ReviewRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReviewRequest'
    RatingRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StarRequest'
          example:
            star: 4.5
