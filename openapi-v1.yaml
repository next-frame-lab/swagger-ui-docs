openapi: 3.1.0
info:
  title: 공연 좌석 예매 서비스 API
  description: 공연 좌석 예매 서비스 API 문서
  version: 1.1.4
servers:
  - url: http://localhost:8081/api/v1
    description: Local Dev Server
  - url: https://api.nextframe.com/api/v1
    description: Production Server
tags:
  - name: performance
    description: 공연 관련 API
  - name: review
    description: 공연 리뷰 관련 API
  - name: seat
    description: 좌석 관련 API
  - name: reservation
    description: 예매 관련 API
  - name: auth
    description: 인증 관련 API
  - name: user
    description: 사용자 관련 API
  - name: payment
    description: 결제 관련 API
  - name: refund
    description: 환불 관련 API
paths:
  /performances/search:
    get:
      tags:
        - performance
      summary: 공연 검색 및 필터링
      description: 공연 이름, 공연 날짜 등을 기준으로 공연 정보를 검색하거나 필터링합니다.
      operationId: searchPerformanceList
      parameters:
        - name: name
          in: query
          required: false
          description: 공연 이름 (전체 또는 일부 문자열)
          schema:
            type: string
        - name: date
          in: query
          required: false
          description: 공연 날짜 (YYYY-MM-DD)
          schema:
            type: string
            format: date
        - name: stadium
          in: query
          required: false
          description: 공연장 이름
          schema:
            type: string
        - name: genre
          in: query
          required: false
          description: 공연 장르 (연극, 뮤지컬 등)
          schema:
            type: string
        - name: type
          in: query
          required: false
          description: 공연 유형 (로맨스, 스릴러 등)
          schema:
            type: string
        - name: page
          in: query
          required: true
          description: 페이지 번호
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          required: true
          description: 한 페이지의 크기
          schema:
            type: integer
            default: 32
      responses:
        '200':
          description: 조건에 맞는 공연 검색 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerformanceListResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /performances:
    get:
      tags:
        - performance
      summary: 공연 목록 조회
      description: 공연 목록을 조회합니다.
      operationId: getPerformanceList
      parameters:
        - name: page
          in: query
          required: true
          description: 페이지 번호
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          required: true
          description: 한 페이지의 크기
          schema:
            type: integer
            default: 32
      responses:
        '200':
          description: 공연 목록 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerformanceListResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /performances/{id}:
    get:
      tags:
        - performance
      summary: 공연 상세 조회
      description: 공연 ID를 통해 공연의 상세 정보를 조회합니다.
      operationId: getPerformanceById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: 조회할 공연 ID
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: 공연 상세 정보 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerformanceDetailResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /performances/{id}/reviews:
    get:
      tags:
        - review
      summary: 공연 리뷰 목록 조회
      description: 공연의 리뷰 목록을 조회합니다.
      operationId: getPerformanceReviews
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: 조회할 리뷰의 공연 ID
        - name: page
          in: query
          required: true
          description: 페이지 번호
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          required: true
          description: 한 페이지의 크기
          schema:
            type: integer
            default: 5
        - name: sort
          in: query
          required: false
          schema:
            type: string
            example: createdAt,desc
          description: 정렬 기준 (기본값 createdAt,desc)
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: 리뷰 목록 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewListResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - review
      summary: 공연 리뷰 등록
      description: 공연에 리뷰를 등록합니다.
      operationId: createPerformanceReview
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: 리뷰가 등록될 공연의 ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewRequest'
      security:
        - bearerAuth: [ ]
      responses:
        '201':
          description: 리뷰 등록 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewCreateResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /reviews/{id}:
    patch:
      tags:
        - review
      summary: 공연 리뷰 수정
      description: 공연 리뷰를 수정합니다.
      operationId: updatePerformanceReview
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: 조회할 리뷰 아이디
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - content
              properties:
                content:
                  type: string
                  example: 무대 연출이 압도적이었고 배우들의 몰입도가 정말 훌륭했어요!
                  description: 리뷰 본문
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: 리뷰 수정 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewUpdateResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - review
      summary: 공연 리뷰 삭제
      description: 공연의 리뷰를 삭제합니다.
      operationId: deletePerformanceReview
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: 삭제할 리뷰 ID
      security:
        - bearerAuth: [ ]
      responses:
        '204':
          description: 리뷰 삭제 성공 (내용 없음)
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /reviews/{id}/likes:
    post:
      tags:
        - review
      summary: 리뷰 좋아요 등록
      description: 리뷰 ID에 대해 좋아요를 등록합니다.
      operationId: likeReview
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: 좋아요가 등록될 리뷰의 ID
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: 리뷰에 좋아요 등록 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewLikeResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /stadiums/{id}/seat-definitions:
    get:
      tags:
        - seat
      summary: 공연장의 전체 좌석 조회
      parameters:
        - in: path
          name: id
          required: true
          schema: {type: string, format: uuid}
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeatMinimalListResponse'
              example:
                code: SUCCESS
                data:
                  seats:
                    - id: "faad22a7-3267-4b09-994a-8a32b3539ea4"
                      section: "A"
                      row: 1
                      column: 1
                    - id: "3f06d869-5385-4c81-a780-1b5a707375aa"
                      section: "A"
                      row: 1
                      column: 2
                    - id: "6ecb015d-cea3-445c-bc2e-da1da179177c"
                      section: "A"
                      row: 1
                      column: 3
                    - id: "8e5a146b-d0ea-4c58-89e0-2f1bf4cf1707"
                      section: "A"
                      row: 1
                      column: 4
                    - id: "4dab7a0d-1b1f-4782-bde5-b0ef26a5da8c"
                      section: "A"
                      row: 1
                      column: 5
                    - id: "b66d8cb7-a720-44a1-a19b-336edf3cbe14"
                      section: "B"
                      row: 2
                      column: 1
                    - id: "d127e4a2-f8ab-44f7-9170-e6c6e2a42dee"
                      section: "B"
                      row: 2
                      column: 2
                    - id: "6752317f-952b-49dd-85da-685bf2619fd9"
                      section: "C"
                      row: 2
                      column: 3
                    - id: "1529b1e6-ad5e-4403-82a5-88f6eee30535"
                      section: "C"
                      row: 2
                      column: 4
                    - id: "b2b35040-b5fe-4671-86ae-d78a0d6a8b6f"
                      section: "C"
                      row: 2
                      column: 5
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /schedules/{id}/seat-states:
    get:
      tags:
        - seat
      summary: 좌석 상태 조회
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string, format: uuid }
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              example:
                code: SUCCESS
                data:
                  seats:
                    - id: "6752317f-952b-49dd-85da-685bf2619fd9"
                      isLocked: true
                    - id: "1529b1e6-ad5e-4403-82a5-88f6eee30535"
                      isLocked: true
                    - id: "b2b35040-b5fe-4671-86ae-d78a0d6a8b6f"
                      isLocked: true
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /reservations:
    post:
      tags:
        - reservation
      summary: 공연 좌석 예매
      description: 공연의 특정 스케줄에 대해 좌석을 예매합니다.
      operationId: reserveSeats
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationRequest'
      responses:
        '200':
          description: 예매 성공
          content:
            application/json:
              example:
                code: SUCCESS
                data:
                  reservationId: 21c9b168-8575-487b-add2-67db7365ef78
                  performance:
                    name: 햄릿
                    scheduleDate: '2025-07-15'
                    scheduleTime: '19:30'
                  seats:
                    - section: A
                      row: 1
                      column: 12
                    - section: A
                      row: 1
                      column: 13
                  totalAmount: 300000

        '409':
          $ref: '#/components/responses/SeatAlreadyLocked'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /users/reservations:
    get:
      tags:
        - reservation
      summary: 사용자 예약 목록 조회
      description: 자신의 예약 목록을 조회합니다.
      operationId: getUserReservations
      responses:
        '200':
          description: 예약 목록 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
              example:
                code: SUCCESS
                data:
                  - reservationId: "acbd1234-5678-9abc-def0-112233445566"
                    performance:
                      name: "햄릿"
                      scheduleDate: "2025-07-15"
                      scheduleTime: "19:30"
                    stadium:
                      name: 대전월드컵경기장
                      address: 대전광역시 유성구
                    seats:
                      - section: "A"
                        row: 1
                        column: 12
                      - section: "A"
                        row: 1
                        column: 13
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /payments/confirm:
    post:
      tags:
        - payment
      summary: 결제 서버에 결제 승인 요청
      description: Toss에서 받은 peymentKey, orderId, amount로 결제 서버에 승인을 요청합니다.
      operationId: confirm
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                paymentkey:
                  type: string
                  example : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
                  description: Toss에 결제 요청 후에 받은 키
                orderId:
                  type: string
                  description: 우리 서버 예매 Id
                  example: resJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
                amount:
                  type: integer
                  example: 10000
              required:
                - paymentKey
                - orderId
                - amount
      responses:
        '200':
          description: 결제 승인 성공
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonResponse"
              example:
                code: SUCCESS
                data:
                  reservationId: "resJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
                  totalAmount: 10000
                message: null
        '400':
          description: 결제 승인 거부
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonResponse"
              example:
                code: FAILED
                data: null
                message: "ALREADY_PROCESSED_PAYMENT"
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonResponse"
              example:
                code: FAILED
                data: null
                message: "결제 처리 중 오류가 발생했습니다. 잠시 후 다시 시도해 주세요."

  /auth/signin:
    post:
      tags:
        - auth
      summary: 소셜 로그인 (카카오/네이버/구글 통합)
      description: 소셜 access token과 provider를 전달받아 로그인 또는 자동 회원가입을 처리하고 자체 JWT 토큰을 발급합니다.
      operationId: loginWithSocial
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                provider:
                  type: string
                  enum:
                    - kakao
                    - naver
                    - google
                  description: 로그인 제공자 종류
                authCode:
                  type: string
                  description: 소셜에서 발급받은 access token
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
              required:
                - provider
                - authCode
      responses:
        '200':
          description: 로그인 또는 회원가입 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigninResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /auth/refresh:
    post:
      tags:
        - auth
      summary: access token 재발급
      description: refresh token을 기반으로 새로운 access token을 발급합니다.
      operationId: refreshAccessToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
                  description: 발급받았던 refresh token
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
              required:
                - refreshToken
      responses:
        '200':
          description: access token 재발급 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: SUCCESS
                  message:
                    type: string
                    example: access token이 재발급되었습니다.
                  data:
                    type: object
                    properties:
                      accessToken:
                        type: string
                        example: new.jwt.access.token
                      refreshToken:
                        type: string
                        example: same.or.new.refresh.token
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /payments/{id}/refund:
    post:
      tags:
        - refund
      summary: 결제 환불 요청
      description: 결제 ID를 기반으로 환불 요청을 보냅니다.
      operationId: requestRefund
      parameters:
        - name: id
          in: path
          required: true
          description: 환불할 결제 ID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: 환불 요청 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
              example:
                code: REFUND_REQUESTED
                data:
                  refundId: "a1b2c3d4-e5f6-7890-aaaa-bbbbccccdddd"
                  status: "REQUESTED"
                  requestedAt: "2025-07-09T18:22:00"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /payments/{id}/refund-status:
    get:
      tags:
        - refund
      summary: 환불 상태 조회
      description: 결제 ID를 기반으로 환불 상태를 조회합니다.
      operationId: getRefundStatus
      parameters:
        - name: id
          in: path
          required: true
          description: 결제 ID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: 환불 상태 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
              example:
                code: SUCCESS
                data:
                  refundId: "a1b2c3d4-e5f6-7890-aaaa-bbbbccccdddd"
                  status: "APPROVED"
                  requestedAt: "2025-07-09T18:22:00"
                  completedAt: "2025-07-09T18:26:40"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  schemas:
    CommonResponse:
      type: object
      properties:
        code:
          type: string
          description: 응답 코드
          example: SUCCESS
        data:
          nullable: true
          description: 응답 데이터 (에러 시 null)

    PerformanceListResponse:
      type: object
      properties:
        code:
          type: string
          example: SUCCESS
        data:
          type: object
          properties:
            performances:
              type: array
              items:
                $ref: '#/components/schemas/PerformanceSummary'
            pagination:
              $ref: '#/components/schemas/pagination'
      example:
        code: SUCCESS
        data:
          performances:
            - id: "21c9b168-8575-487b-add2-67db7365ef78"
              name: "햄릿"
              imageUrl: "https://example.com/hamlet.jpg"
              type: "CLASSIC"
              genre: "PLAY"
              stadiumName: "서울예술의전당"
              startDate: "2025-08-01"
              endDate: "2025-08-31"
              adultOnly: false
            - id: "ef506bfa-c48e-47d4-8ab4-199f9df6f754"
              name: "캣츠"
              imageUrl: "https://example.com/cats.jpg"
              type: "CLASSIC"
              genre: "MUSICAL"
              stadiumName: "대전월드컵경기장"
              startDate: "2025-09-10"
              endDate: "2025-09-25"
              adultOnly: false
          pagination:
            page: 0
            size: 32
            totalItems: 2
            totalPages: 1
            hasNext: true
            hasPrevious: true

    PerformanceDetailResponse:
      type: object
      properties:
        code:
          type: string
          example: SUCCESS
        data:
          $ref: '#/components/schemas/PerformanceDetail'
      example:
        code: SUCCESS
        data:
          id: "3fa85f64-5717-4562-b3fc-2c963f66afa6"
          imageUrl: "https://example.com/"
          name: "오페라 유령"
          type: "ROMANCE"
          genre: "OPERA"
          averageStar: 4.6
          runningTime: 130
          description: "전설적인 오페라의 유령이 다시 돌아옵니다."
          adultOnly: true
          ticketOpenTime: "2025-09-01T12:45"
          ticketCloseTime: "2025-10-01T12:45"
          stadium:
            id: "baea5498-7cee-41e7-aa8e-b13d89e884e7"
            name: "부산문화회관"
            address: "부산광역시 남구 유엔로 123"
          performanceSchedules:
            - id: "1a2b3c4d-5e6f-7890-abcd-1234567890ef"
              date: "2025-09-10"
              time: "19:00"
            - id: "a0a73897-d7c1-42a9-a58e-2e3543e5c912"
              date: "2025-09-13"
              time: "15:00"
          seatSectionPrices:
            - section: "A"
              price: 120000
            - section: "B"
              price: 150000
    ReviewLikeResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                likeStatus:
                  type: boolean
                  example: true
    ReviewRequest:
      type: object
      required:
        - star
      properties:
        star:
          type: number
          format: float
          minimum: 0
          maximum: 5
          example: 4.5
          description: 등록할 별점 (0.0 이상 5.0 이하, 소수점 1자리 허용)
        content:
          type: string
          example: 무대 연출이 압도적이었고 배우들의 몰입도가 정말 훌륭했어요!
          description: 리뷰 본문
    SigninData:
      type: object
      properties:
        accessToken:
          type: string
          example: eyJhbGciOi...
          description: 자체 발급 access token (JWT)
        refreshToken:
          type: string
          example: dGhpc2lzYXJ...
          description: 자체 발급 refresh token (JWT)
        imageUrl:
          type: string
          example: https://cdn.example.com/profile/user123.jpg
        name:
          type: string
          example: 홍길동
        age:
          type: integer
          example: 29
        email:
          type: string
          example: hong@example.com
    SigninResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/SigninData'
    ReviewListResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                reviews:
                  type: array
                  items:
                    $ref: '#/components/schemas/Review'
                pagination:
                  $ref: '#/components/schemas/pagination'
          example:
            code: SUCCESS
            data:
              reviews:
                - id: "c8d1e2a7-4a5b-437b-9d90-7b1a2c3f1234"
                  writerName: "뮤덕이"
                  writerProfileImageUrl: "https://cdn.example.com/profiles/user123.jpg"
                  content: "정말 감동적인 공연이었어요. 무대 연출도 최고!"
                  likeStatus: true
                  likeCount: 12
                  createdAt: "2025-07-01T14:32:00"
                  updatedAt: "2025-07-02T15:32:00"
                - id: "d9f1e3b8-6c7d-438a-8f21-1c2b3a4e5f67"
                  writerName: "관극러"
                  writerProfileImageUrl: "https://cdn.example.com/profiles/user456.jpg"
                  content: "배우들 연기가 인상 깊었어요. 다음에도 또 보고 싶네요!"
                  likeStatus: false
                  likeCount: 3
                  createdAt: "2025-07-15T11:10:00"
                  updatedAt: "2025-07-16T14:32:00"
              pagination:
                page: 0
                size: 5
                totalItems: 2
                totalPages: 1
                hasNext: true
                hasPrevious: true
    ReviewCreateResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                  example: b8c9d3fa-2f1a-4a5d-9e2a-812f7a91cdef
                createdAt:
                  type: string
                  format: date-time
                  example: 2025-07-11T12:45:00
    ReviewUpdateResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                  example: b8c9d3fa-2f1a-4a5d-9e2a-812f7a91cdef
                updatedAt:
                  type: string
                  format: date-time
                  example: 2025-07-11T12:45:00
    ReservationRequest:
      type: object
      required:
        - performanceId
        - scheduleId
        - seatIds
        - elapsedTime
      properties:
        performanceId:
          type: string
          format: uuid
        scheduleId:
          type: string
          format: uuid
        seatIds:
          type: array
          items:
            type: string
            format: uuid
        elapsedTime:
          type: integer
          description: 예약에 소요된 시간(초)
          example: 140
        totalAmount:
          type: integer
          description: 총 결제 금액
          example: 300000
      example:
        performanceId: "9a1b2c3d-4e5f-6789-abcd-1234567890ab"
        scheduleId: "1a2b3c4d-5e6f-7890-abcd-0987654321ef"
        seatIds:
          - "aaaa1111-bbbb-2222-cccc-3333dddd4444"
          - "eeee5555-ffff-6666-gggg-7777hhhh8888"
        elapsedTime: 87
        totalAmount: 300000

    PerformanceSummary:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: 공연 ID
        imageUrl:
          type: string
          format: uri
          description: 공연 대표 이미지
        name:
          type: string
          example: 캣츠
          description: 공연 이름
        type:
          type: string
          example: CLASSIC
          description: 공연 유형 (예 로맨스, 스릴러)
        genre:
          type: string
          example: CONCERT
          description: 공연 유형 (예 연극, 뮤지컬)
        stadiumName:
          type: string
          example: 대전월드컵경기장
          description: 공연장 이름
        startDate:
          type: string
          format: date
          example: 2025-10-05
          description: 공연 시작 날짜
        endDate:
          type: string
          format: date
          example: 2025-10-25
          description: 공연 종료 날짜
        adultOnly:
          type: boolean
          description: 성인 공연 여부
          example: false

    PerformanceDetail:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: 공연의 식별자
        imageUrl:
          type: string
          format: uri
          description: 공연의 이미지 주소
        name:
          type: string
          description: 공연의 이름
        type:
          type: string
          description: 공연의 유형
        genre:
          type: string
          description: 공연의 장르
        averageStar:
          type: number
          format: float
          description: 공연의 평균 별점
        runningTime:
          type: integer
          description: 공연 진행 시간(분 단위)
        description:
          type: string
          description: 공연에 대한 설명
        adultOnly:
          type: boolean
          description: 성인 공연 여부
        ticketOpenTime:
          type: string
          format: date
          description: 공연 예매 오픈 시간
        ticketCloseTime:
          type: string
          format: date
          description: 공연 예매 끝나는 시간
        stadium:
          $ref: '#/components/schemas/Stadium'
          description: 공연이 진행되는 공연장 정보
        performanceSchedules:
          type: array
          description: 공연 일정 목록
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: 공연 일정 식별자
              date:
                type: string
                format: date
                description: 공연 일정의 날짜
              time:
                type: string
                description: 공연 일정의 시간
        seatSectionPrices:
          type: array
          description: 공연의 좌석 정보
          items:
            type: object
            properties:
              section:
                type: string
                description: 공연의 좌석
              price:
                type: integer
                description: 공연의 좌석의 가격
    SeatMinimalItem:
      type: object
      required: [ id, section, row, column ]
      properties:
        id:
          type: string
          format: uuid
        section:
          type: string
        row:
          type: integer
          minimum: 1
        column:
          type: integer
          minimum: 1

    SeatMinimalListData:
      type: object
      properties:
        seats:
          type: array
          items:
            $ref: '#/components/schemas/SeatMinimalItem'

    SeatMinimalListResponse:
      type: object
      properties:
        code:
          type: string
          example: SUCCESS
        data:
          $ref: '#/components/schemas/SeatMinimalListData'

    Stadium:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 10fcbc0e-db96-4f7a-a15b-fcda56967ddf
        name:
          type: string
          example: 부산문화회관
        address:
          type: string
          example: 부산광역시 남구 유엔로 123
    Review:
      type: object
      properties:
        id:
          type: string
          format: uuid
        writerName:
          type: string
        writerProfileImageUrl:
          type: string
          format: uri
        content:
          type: string
        likeStatus:
          type: boolean
        likeCount:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    pagination:
      type: object
      properties:
        page:
          type: integer
        size:
          type: integer
        totalItems:
          type: integer
        totalPages:
          type: integer
        hasNext:
          type: boolean
        hasPrevious:
          type: boolean
    ErrorResponse:
      type: object
      properties:
        code:
          type: string
        data:
          nullable: true
  responses:
    BadRequest:
      description: 잘못된 요청 (400)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            code: BAD_REQUEST
            data: null
    NotFound:
      description: 리소스를 찾을 수 없음 (404)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            code: NOT_FOUND
            data: null
    Unauthorized:
      description: 인증 실패 (401)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            code: UNAUTHORIZED
            data: null
    InternalServerError:
      description: 서버 내부 오류 (500)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            code: INTERNAL_SERVER_ERROR
            data: null
    SeatAlreadyLocked:
      description: 요청한 좌석이 이미 잠겨있음 (409)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            code: SEAT_ALREADY_LOCKED
            data: null

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT